from typing import List

class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        r = [set() for j in range(9)]
        c = [set() for j in range(9)]
        b = [set() for j in range(9)]
        
        for j1 in range(9):
            for j2 in range(9):
                curr = board[j1][j2]
                if curr != ".":
                    if curr not in r[j1]:
                        r[j1].add(curr)
                    else:
                        return False
                    
                    if curr not in c[j2]:
                        c[j2].add(curr)
                    else:
                        return False
                    
                    ind = (j1//3)*3 + j2//3
                    if curr not in b[ind]:
                        b[ind].add(curr)
                    else:
                        return False
        return True

test = Solution()
# print(test.isValidSudoku([["5","3",".",".","7",".",".",".","."]
# ,["6",".",".","1","9","5",".",".","."]
# ,[".","9","8",".",".",".",".","6","."]
# ,["8",".",".",".","6",".",".",".","3"]
# ,["4",".",".","8",".","3",".",".","1"]
# ,["7",".",".",".","2",".",".",".","6"]
# ,[".","6",".",".",".",".","2","8","."]
# ,[".",".",".","4","1","9",".",".","5"]
# ,[".",".",".",".","8",".",".","7","9"]]))

print(test.isValidSudoku([["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]))

